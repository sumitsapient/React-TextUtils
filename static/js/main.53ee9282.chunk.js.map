{"version":3,"sources":["components/Alert.jsx","components/Nav.jsx","components/TextForm.jsx","App.jsx","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capital","message","Nav","mode","to","title","id","onClick","toggle","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","rows","onChange","e","target","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","setMode","setAlert","setTimeout","body","ReactDOM","render"],"mappings":"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","file":"static/js/main.53ee9282.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Alert = (props) => {\r\n\r\n    const capital=(word)=>{\r\n         let lower = word.toLowerCase();\r\n         return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capital(props.alert.type)}</strong>:{props.alert.message}\r\n</div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport const Nav = (props) => {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" to=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" to=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" to=\"/#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nNav.propTypes = { title: PropTypes.string };\r\n","import React, { useState } from \"react\";\r\n\r\nexport const TextForm = (props) => {\r\n  const [text, setText] = useState(\"\");\r\n  const handleClickUp = ()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\",\"success\");\r\n  }\r\n  const handleClickLow = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lower case\",\"success\");\r\n  }\r\n  const handleText=(e)=>{\r\n   setText(e.target.value);\r\n  }\r\n  const handleCopy=()=>{\r\n    let text = document.getElementById(\"box\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\",\"success\");\r\n  }\r\n  const handleSpace =()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Space removed\",\"success\");\r\n  }\r\n\r\n const handleClear =()=>{\r\n   setText(\" \");\r\n   props.showAlert(\"Area cleaned\",\"success\");\r\n }\r\n\r\n\r\n  return (\r\n      <>\r\n    <div className=\"mb-3\" style={props.mode===\"dark\"?{color:\"white\"}:{color:\"black\"}}>\r\n      <h3>{props.heading}</h3>\r\n      <textarea className=\"form-control\" style={props.mode===\"dark\"?{color:\"white\",backgroundColor:\"#001325\"}:{color:\"black\",backgroundColor:\"white\"}} value={text} id=\"box\" rows=\"5\" onChange={handleText}></textarea>\r\n      \r\n    </div>\r\n    <button type=\"button\" className=\"btn btn-primary\" onClick={handleClickUp}>UpperCase</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleClickLow}>LowerCase</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleSpace}>Remove Space</button>\r\n    <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleClear}>Clear Text</button>\r\n\r\n    <div className=\"container my-3\" style={props.mode===\"dark\"?{color:\"white\"}:{color:\"black\"}}>\r\n        <h3>Your Text Summary</h3>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} minutes read</p>\r\n        <h3>Summary</h3>\r\n        <p>{text.length>0?text:\"Enter text to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React,{useState} from \"react\";\r\nimport { About } from \"./components/About\";\r\nimport { Alert } from \"./components/Alert\";\r\nimport { Nav } from \"./components/Nav\";\r\nimport { TextForm } from \"./components/TextForm\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nexport const App = () => {\r\n\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert,setAlert]=useState(null);\r\n  const showAlert=(message,type)=>{\r\n\r\nsetAlert({message:message,\r\n  type:type})\r\n  setTimeout(() => {\r\n    setAlert(null);\r\n  }, 1500);\r\n  }\r\n  const toggle=()=>{\r\n    if(mode===\"light\"){\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor=\"#002c58\";\r\n      document.title=\"TextUtis-Dark\";\r\n      showAlert(\"Dark mode is enabled\",\"success\");\r\n    }\r\n    else{\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor=\"white\";\r\n      document.title=\"TextUtis-Light\";\r\n      showAlert(\"Light mode is enabled\",\"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Router> */}\r\n      <Nav title=\"TextUtils\" mode={mode} toggle={toggle}/>\r\n      <Alert alert={alert}/>\r\n      <div className=\"container my-4\">\r\n        \r\n        {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n          <TextForm heading=\"Enter Text\" mode={mode} showAlert={showAlert} />\r\n          </Route>\r\n        </Switch> */}\r\n        <TextForm heading=\"Enter Text\" mode={mode} showAlert={showAlert} />\r\n      </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}